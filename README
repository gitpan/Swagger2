NAME
    Swagger2 - Swagger RESTful API Documentation

VERSION
    0.02

DESCRIPTION
    THIS MODULE IS EXPERIMENTAL! ANY CHANGES CAN HAPPEN!

    Swagger2 is a module for generating, parsing and transforming swagger
    <http://swagger.io/> API documentation. It has support for reading
    swagger specification in JSON notation and it can also read YAML files,
    if a "YAML parser" is installed.

    This distribution comes with a Mojolicious plugin,
    Mojolicious::Plugin::Swagger2, which can set up routes and perform input
    and output validation.

RECOMMENDED MODULES
    *   YAML parser

        A YAML parser is required if you want to read/write spec written in
        the YAML format. Supported modules are YAML::XS, YAML::Syck, YAML
        and YAML::Tiny.

SYNOPSIS
      use Swagger2;
      my $swagger = Sswagger2->new("file:///path/to/api-spec.yaml");

      # Access the raw specificaiton values
      print $swagger->tree->get("/swagger");

      # Returns the specification as a POD document
      print $swagger->pod->as_string;

ATTRIBUTES
  base_url
      $mojo_url = $self->base_url;

    Mojo::URL object that holds the location to the API endpoint. Note: This
    might also just be a dummy URL to <http://example.com/>.

  tree
      $pointer = $self->tree;
      $self = $self->tree(Mojo::JSON::Pointer->new({}));

    Holds a Mojo::JSON::Pointer object containing the swagger specification.

  ua
      $ua = $self->ua;
      $self = $self->ua(Mojo::UserAgent->new);

    A Mojo::UserAgent used to fetch remote documentation.

  url
      $mojo_url = $self->url;

    Mojo::URL object that holds the location to the documentation file.

METHODS
  expand
      $swagger = $self->expand;

    This method returns a new "Swagger2" object, where all the references
    are resolved.

  load
      $self = $self->load;
      $self = $self->load($url);

    Used to load the content from $url or "url". This method will try to
    guess the content type (JSON or YAML) by looking at the filename, URL
    path or "Content-Type" header reported by a web server.

  new
      $self = Swagger2->new($url);
      $self = Swagger2->new(%attributes);
      $self = Swagger2->new(\%attributes);

    Object constructor.

  pod
      $pod_object = $self->pod;

    Returns a Swagger2::POD object.

  to_string
      $json = $self->to_string;
      $json = $self->to_string("json");
      $yaml = $self->to_string("yaml");

    This method can transform this object into Swagger spec.

COPYRIGHT AND LICENSE
    Copyright (C) 2014, Jan Henning Thorsen

    This program is free software, you can redistribute it and/or modify it
    under the terms of the Artistic License version 2.0.

AUTHOR
    Jan Henning Thorsen - "jhthorsen@cpan.org"

